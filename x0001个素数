#include<iostream>
#include<vector>
using namespace std;

bool isprime(int a){
    if(a<=1){
        return false;
    }
    else if(a==2||a==3){
        return true;
    }
    else{
        for(int i = 2;i*i<=a;i++){
            if(a%i==0){
                return false;
            }
        }
        return true;
    }
}
int main(){
    vector<long long> x0000;

    for(int i = 0;i<=70;i++){
        x0000.push_back(i*10000+1);
    }
    int k = 0;
    int n = 0;
    for(int i = 2;k<=70;i++){
        if(isprime(i)){
            n++;
            if(n==x0000[k]){
                cout<<i<<endl;
                k++;
            }
        }
        else{

        }

    }
    return 0;
}
*******************************************************8
1到70 0001个（由24行处决定，25行可去掉加一变成0-70万）
2
104743
224743
350381
479939
611957
746777
882389
1020389
1159531
1299721
1441051
1583591
1726951
1870669
2015179
2160563
2307233
2454619
2601869
2750161
2898541
3047773
3196939
3346621
3497867
3648941
3800213
3951169
4103641
4256249
4410323
4562707
4716083
4869877
5023309
5178053
5332531
5487707
5644033
5800139
5955043
6111617
6268303
6424961
6581969
6738899
6895397
7052141
7210781
7368791
7528141
7685807
7844741
8003539
8163049
8322253
8482261
8640683
8799929
8960467
9121493
9281017
9442231
9602471
9763447
9925471
10086773
10248911
10410143
10570849
作为求素数和的辅助vector，尝试进行分段解，避免超时。
